(in-package #:org.shirakumo.framebuffers.win32.cffi)

(cffi:define-foreign-library user32
  (T (:default "user32")))

(cffi:define-foreign-library shcore
  (T (:default "shcore")))

(cffi:define-foreign-library gdi32
  (T (:default "gdi32")))

(set 'cl-user::*foreign-system-libraries*
     (union (when (boundp 'cl-user::*foreign-system-libraries*)
              (symbol-value 'cl-user::*foreign-system-libraries*))
            '(user32 shcore user32)))

(defconstant ENUM-CURRENT-SETTINGS (ldb (byte 32 0) -1))
(defconstant ENUM-REGISTRY-SETTINGS (ldb (byte 32 0) -2))

(cffi:defbitfield display-setting-flags
  (:updateregistry #x00000001)
  (:test #x00000002)
  (:fullscreen #x00000004)
  (:global #x00000008)
  (:set-primary #x00000010)
  (:videoparameters #x00000020)
  (:enable-unsafe-modes #x00000100)
  (:disable-unsafe-modes #x00000200)
  (:reset #x40000000)
  (:reset-ex #x20000000)
  (:noreset #x10000000))

(cffi:defbitfield global-alloc-flags
  (:fixed #x0)
  (:moveable #x2)
  (:zeroint #x40))

(cffi:defcenum (clipboard-format :int :allow-undeclared-values t)
  (:text 1)
  (:bitmap 2)
  (:metafilepict 3)
  (:sylk 4)
  (:dif 5)
  (:tiff 6)
  (:oemtext 7)
  (:dib 8)
  (:palette 9)
  (:pendata 10)
  (:riff 11)
  (:wave 12)
  (:unicodetext 13)
  (:enhmetafile 14)
  (:hdrop 15)
  (:locale 16)
  (:dibv5 17)
  (:ownerdisplay #x0080)
  (:dsptext #x0081)
  (:dspbitmap #x0082)
  (:dspmetafilepict #x0083)
  (:dspenhmetafile #x008e)
  (:privatefirst #x0200)
  (:privatelast #x02ff)
  (:gdiobjfirst #x0300)
  (:gdiobjlast #x03ff))

(cffi:defcenum load-image-type
  (:bitmap 0)
  (:icon 1)
  (:cursor 2)
  (:enhmetafile 3))

(cffi:defbitfield load-image-behavior
  (:defaultcolor #x0000)
  (:monochrome #x0001)
  (:color #x0002)
  (:copyreturnorg #x0004)
  (:copydeleteorg #x0008)
  (:loadfromfile #x0010)
  (:loadtransparent #x0020)
  (:defaultsize #x0040)
  (:vgacolor #x0080)
  (:loadmap3dcolors #x1000)
  (:createdibsection #x2000)
  (:copyfromresource #x4000)
  (:shared #x8000))

(cffi:defcenum (cursor :size)
  (:normal 32512)
  (:ibeam 32513)
  (:wait 32514)
  (:cross 32515)
  (:up 32516)
  (:size 32640)
  (:icon 32641)
  (:sizenwse 32642)
  (:sizenesw 32643)
  (:sizewe 32644)
  (:sizens 32645)
  (:sizeall 32646)
  (:icocur 32647)
  (:no 32648)
  (:hand 32649)
  (:appstarting 32650))

(cffi:defcenum monitor-dpi-type
  (:effective-dpi 0)
  (:angular-dpi 1)
  (:raw-dpi 2))

(cffi:defcenum dpi-awareness
  (:unaware 0)
  (:system-dpi-aware 1)
  (:per-monitor-dpi-aware 2))

(cffi:defcenum (dpi-awareness-context :ssize)
  (:unaware -1)
  (:system-aware -2)
  (:per-monitor-aware -3)
  (:per-monitor-aware-2 -4)
  (:unaware-gdiscaled -5))

(cffi:defcenum (key :int)
  (:lbutton #x01)
  (:rbutton #x02)
  (:cancel #x03)
  (:mbutton #x04)
  (:xbutton1 #x05)
  (:xbutton2 #x06)
  (:back #x08)
  (:tab #x09)
  (:clear #x0c)
  (:return #x0d)
  (:shift #x10)
  (:control #x11)
  (:menu #x12)
  (:pause #x13)
  (:capital #x14)
  (:kana #x15)
  (:hangeul #x15)
  (:hangul #x15)
  (:ime-on #x16)
  (:junja #x17)
  (:final #x18)
  (:hanja #x19)
  (:kanji #x19)
  (:ime-off #x1a)
  (:escape #x1b)
  (:convert #x1c)
  (:nonconvert #x1d)
  (:accept #x1e)
  (:modechange #x1f)
  (:space #x20)
  (:prior #x21)
  (:next #x22)
  (:end #x23)
  (:home #x24)
  (:left #x25)
  (:up #x26)
  (:right #x27)
  (:down #x28)
  (:select #x29)
  (:print #x2a)
  (:execute #x2b)
  (:snapshot #x2c)
  (:insert #x2d)
  (:delete #x2e)
  (:help #x2f)
  (:lwin #x5b)
  (:rwin #x5c)
  (:apps #x5d)
  (:sleep #x5f)
  (:numpad0 #x60)
  (:numpad1 #x61)
  (:numpad2 #x62)
  (:numpad3 #x63)
  (:numpad4 #x64)
  (:numpad5 #x65)
  (:numpad6 #x66)
  (:numpad7 #x67)
  (:numpad8 #x68)
  (:numpad9 #x69)
  (:multiply #x6a)
  (:add #x6b)
  (:separator #x6c)
  (:subtract #x6d)
  (:decimal #x6e)
  (:divide #x6f)
  (:f1 #x70)
  (:f2 #x71)
  (:f3 #x72)
  (:f4 #x73)
  (:f5 #x74)
  (:f6 #x75)
  (:f7 #x76)
  (:f8 #x77)
  (:f9 #x78)
  (:f10 #x79)
  (:f11 #x7a)
  (:f12 #x7b)
  (:f13 #x7c)
  (:f14 #x7d)
  (:f15 #x7e)
  (:f16 #x7f)
  (:f17 #x80)
  (:f18 #x81)
  (:f19 #x82)
  (:f20 #x83)
  (:f21 #x84)
  (:f22 #x85)
  (:f23 #x86)
  (:f24 #x87)
  (:navigation-view #x88)
  (:navigation-menu #x89)
  (:navigation-up #x8a)
  (:navigation-down #x8b)
  (:navigation-left #x8c)
  (:navigation-right #x8d)
  (:navigation-accept #x8e)
  (:navigation-cancel #x8f)
  (:numlock #x90)
  (:scroll #x91)
  (:oem-nec-equal #x92)
  (:oem-fj-jisho #x92)
  (:oem-fj-masshou #x93)
  (:oem-fj-touroku #x94)
  (:oem-fj-loya #x95)
  (:oem-fj-roya #x96)
  (:lshift #xa0)
  (:rshift #xa1)
  (:lcontrol #xa2)
  (:rcontrol #xa3)
  (:lmenu #xa4)
  (:rmenu #xa5)
  (:browser-back #xa6)
  (:browser-forward #xa7)
  (:browser-refresh #xa8)
  (:browser-stop #xa9)
  (:browser-search #xaa)
  (:browser-favorites #xab)
  (:browser-home #xac)
  (:volume-mute #xad)
  (:volume-down #xae)
  (:volume-up #xaf)
  (:media-next-track #xb0)
  (:media-prev-track #xb1)
  (:media-stop #xb2)
  (:media-play-pause #xb3)
  (:launch-mail #xb4)
  (:launch-media-select #xb5)
  (:launch-app1 #xb6)
  (:launch-app2 #xb7)
  (:oem-1 #xba)
  (:oem-plus #xbb)
  (:oem-comma #xbc)
  (:oem-minus #xbd)
  (:oem-period #xbe)
  (:oem-2 #xbf)
  (:oem-3 #xc0)
  (:gamepad-a #xc3)
  (:gamepad-b #xc4)
  (:gamepad-x #xc5)
  (:gamepad-y #xc6)
  (:gamepad-right-shoulder #xc7)
  (:gamepad-left-shoulder #xc8)
  (:gamepad-left-trigger #xc9)
  (:gamepad-right-trigger #xca)
  (:gamepad-dpad-up #xcb)
  (:gamepad-dpad-down #xcc)
  (:gamepad-dpad-left #xcd)
  (:gamepad-dpad-right #xce)
  (:gamepad-menu #xcf)
  (:gamepad-view #xd0)
  (:gamepad-left-thumbstick-button #xd1)
  (:gamepad-right-thumbstick-button #xd2)
  (:gamepad-left-thumbstick-up #xd3)
  (:gamepad-left-thumbstick-down #xd4)
  (:gamepad-left-thumbstick-right #xd5)
  (:gamepad-left-thumbstick-left #xd6)
  (:gamepad-right-thumbstick-up #xd7)
  (:gamepad-right-thumbstick-down #xd8)
  (:gamepad-right-thumbstick-right #xd9)
  (:gamepad-right-thumbstick-left #xda)
  (:oem-4 #xdb)
  (:oem-5 #xdc)
  (:oem-6 #xdd)
  (:oem-7 #xde)
  (:oem-8 #xdf)
  (:oem-ax #xe1)
  (:oem-102 #xe2)
  (:ico-help #xe3)
  (:ico-00 #xe4)
  (:processkey #xe5)
  (:ico-clear #xe6)
  (:packet #xe7)
  (:oem-reset #xe9)
  (:oem-jump #xea)
  (:oem-pa1 #xeb)
  (:oem-pa2 #xec)
  (:oem-pa3 #xed)
  (:oem-wsctrl #xee)
  (:oem-cusel #xef)
  (:oem-attn #xf0)
  (:oem-finish #xf1)
  (:oem-copy #xf2)
  (:oem-auto #xf3)
  (:oem-enlw #xf4)
  (:oem-backtab #xf5)
  (:attn #xf6)
  (:crsel #xf7)
  (:exsel #xf8)
  (:ereof #xf9)
  (:play #xfa)
  (:zoom #xfb)
  (:noname #xfc)
  (:pa1 #xfd)
  (:oem-clear #xfe))

(cffi:defcenum (message-type :uint :allow-undeclared-values T)
  (:null #x0000)
  (:create #x0001)
  (:destroy #x0002)
  (:move #x0003)
  (:size #x0005)
  (:activate #x0006)
  (:setfocus #x0007)
  (:killfocus #x0008)
  (:enable #x000a)
  (:setredraw #x000b)
  (:settext #x000c)
  (:gettext #x000d)
  (:gettextlength #x000e)
  (:paint #x000f)
  (:close #x0010)
  (:queryendsession #x0011)
  (:queryopen #x0013)
  (:endsession #x0016)
  (:quit #x0012)
  (:erasebkgnd #x0014)
  (:syscolorchange #x0015)
  (:showwindow #x0018)
  (:settingchange #x001a)
  (:devmodechange #x001b)
  (:activateapp #x001c)
  (:fontchange #x001d)
  (:timechange #x001e)
  (:cancelmode #x001f)
  (:setcursor #x0020)
  (:mouseactivate #x0021)
  (:childactivate #x0022)
  (:queuesync #x0023)
  (:getminmaxinfo #x0024)
  (:painticon #x0026)
  (:iconerasebkgnd #x0027)
  (:nextdlgctl #x0028)
  (:spoolerstatus #x002a)
  (:drawitem #x002b)
  (:measureitem #x002c)
  (:deleteitem #x002d)
  (:vkeytoitem #x002e)
  (:chartoitem #x002f)
  (:setfont #x0030)
  (:getfont #x0031)
  (:sethotkey #x0032)
  (:gethotkey #x0033)
  (:querydragicon #x0037)
  (:compareitem #x0039)
  (:getobject #x003d)
  (:compacting #x0041)
  (:commnotify #x0044)
  (:windowposchanging #x0046)
  (:windowposchanged #x0047)
  (:power #x0048)
  (:copydata #x004a)
  (:canceljournal #x004b)
  (:notify #x004e)
  (:inputlangchangerequest #x0050)
  (:inputlangchange #x0051)
  (:tcard #x0052)
  (:help #x0053)
  (:userchanged #x0054)
  (:notifyformat #x0055)
  (:contextmenu #x007b)
  (:stylechanging #x007c)
  (:stylechanged #x007d)
  (:displaychange #x007e)
  (:geticon #x007f)
  (:seticon #x0080)
  (:nccreate #x0081)
  (:ncdestroy #x0082)
  (:nccalcsize #x0083)
  (:nchittest #x0084)
  (:ncpaint #x0085)
  (:ncactivate #x0086)
  (:getdlgcode #x0087)
  (:syncpaint #x0088)
  (:ncmousemove #x00a0)
  (:nclbuttondown #x00a1)
  (:nclbuttonup #x00a2)
  (:nclbuttondblclk #x00a3)
  (:ncrbuttondown #x00a4)
  (:ncrbuttonup #x00a5)
  (:ncrbuttondblclk #x00a6)
  (:ncmbuttondown #x00a7)
  (:ncmbuttonup #x00a8)
  (:ncmbuttondblclk #x00a9)
  (:ncxbuttondown #x00ab)
  (:ncxbuttonup #x00ac)
  (:ncxbuttondblclk #x00ad)
  (:input-device-change #x00fe)
  (:input #x00ff)
  (:keyfirst #x0100)
  (:keydown #x0100)
  (:keyup #x0101)
  (:char #x0102)
  (:deadchar #x0103)
  (:syskeydown #x0104)
  (:syskeyup #x0105)
  (:syschar #x0106)
  (:sysdeadchar #x0107)
  (:unichar #x0109)
  (:keylast #x0109)
  (:ime-startcomposition #x010d)
  (:ime-endcomposition #x010e)
  (:ime-composition #x010f)
  (:ime-keylast #x010f)
  (:initdialog #x0110)
  (:command #x0111)
  (:syscommand #x0112)
  (:timer #x0113)
  (:hscroll #x0114)
  (:vscroll #x0115)
  (:initmenu #x0116)
  (:initmenupopup #x0117)
  (:menuselect #x011f)
  (:gesture #x0119)
  (:gesturenotify #x011a)
  (:menuchar #x0120)
  (:enteridle #x0121)
  (:menurbuttonup #x0122)
  (:menudrag #x0123)
  (:menugetobject #x0124)
  (:uninitmenupopup #x0125)
  (:menucommand #x0126)
  (:changeuistate #x0127)
  (:updateuistate #x0128)
  (:queryuistate #x0129)
  (:ctlcolormsgbox #x0132)
  (:ctlcoloredit #x0133)
  (:ctlcolorlistbox #x0134)
  (:ctlcolorbtn #x0135)
  (:ctlcolordlg #x0136)
  (:ctlcolorscrollbar #x0137)
  (:ctlcolorstatic #x0138)
  (:mousefirst #x0200)
  (:mousemove #x0200)
  (:lbuttondown #x0201)
  (:lbuttonup #x0202)
  (:lbuttondblclk #x0203)
  (:rbuttondown #x0204)
  (:rbuttonup #x0205)
  (:rbuttondblclk #x0206)
  (:mbuttondown #x0207)
  (:mbuttonup #x0208)
  (:mbuttondblclk #x0209)
  (:mousewheel #x020a)
  (:xbuttondown #x020b)
  (:xbuttonup #x020c)
  (:xbuttondblclk #x020d)
  (:mousehwheel #x020e)
  (:mouselast #x020e)
  (:parentnotify #x0210)
  (:entermenuloop #x0211)
  (:exitmenuloop #x0212)
  (:nextmenu #x0213)
  (:sizing #x0214)
  (:capturechanged #x0215)
  (:moving #x0216)
  (:powerbroadcast #x0218)
  (:devicechange #x0219)
  (:mdicreate #x0220)
  (:mdidestroy #x0221)
  (:mdiactivate #x0222)
  (:mdirestore #x0223)
  (:mdinext #x0224)
  (:mdimaximize #x0225)
  (:mditile #x0226)
  (:mdicascade #x0227)
  (:mdiiconarrange #x0228)
  (:mdigetactive #x0229)
  (:mdisetmenu #x0230)
  (:entersizemove #x0231)
  (:exitsizemove #x0232)
  (:dropfiles #x0233)
  (:mdirefreshmenu #x0234)
  (:pointerdevicechange #x238)
  (:pointerdeviceinrange #x239)
  (:pointerdeviceoutofrange #x23a)
  (:touch #x0240)
  (:ncpointerupdate #x0241)
  (:ncpointerdown #x0242)
  (:ncpointerup #x0243)
  (:pointerupdate #x0245)
  (:pointerdown #x0246)
  (:pointerup #x0247)
  (:pointerenter #x0249)
  (:pointerleave #x024a)
  (:pointeractivate #x024b)
  (:pointercapturechanged #x024c)
  (:touchhittesting #x024d)
  (:pointerwheel #x024e)
  (:pointerhwheel #x024f)
  (:pointerroutedto #x0251)
  (:pointerroutedaway #x0252)
  (:pointerroutedreleased #x0253)
  (:ime-setcontext #x0281)
  (:ime-notify #x0282)
  (:ime-control #x0283)
  (:ime-compositionfull #x0284)
  (:ime-select #x0285)
  (:ime-char #x0286)
  (:ime-request #x0288)
  (:ime-keydown #x0290)
  (:ime-keyup #x0291)
  (:mousehover #x02a1)
  (:mouseleave #x02a3)
  (:ncmousehover #x02a0)
  (:ncmouseleave #x02a2)
  (:wtssession-change #x02b1)
  (:tablet-first #x02c0)
  (:tablet-last #x02df)
  (:dpichanged #x02e0)
  (:dpichanged-beforeparent #x02e2)
  (:dpichanged-afterparent #x02e3)
  (:getdpiscaledsize #x02e4)
  (:cut #x0300)
  (:copy #x0301)
  (:paste #x0302)
  (:clear #x0303)
  (:undo #x0304)
  (:renderformat #x0305)
  (:renderallformats #x0306)
  (:destroyclipboard #x0307)
  (:drawclipboard #x0308)
  (:paintclipboard #x0309)
  (:vscrollclipboard #x030a)
  (:sizeclipboard #x030b)
  (:askcbformatname #x030c)
  (:changecbchain #x030d)
  (:hscrollclipboard #x030e)
  (:querynewpalette #x030f)
  (:paletteischanging #x0310)
  (:palettechanged #x0311)
  (:hotkey #x0312)
  (:print #x0317)
  (:printclient #x0318)
  (:appcommand #x0319)
  (:themechanged #x031a)
  (:clipboardupdate #x031d)
  (:dwmcompositionchanged #x031e)
  (:dwmncrenderingchanged #x031f)
  (:dwmcolorizationcolorchanged #x0320)
  (:dwmwindowmaximizedchange #x0321)
  (:dwmsendiconicthumbnail #x0323)
  (:dwmsendiconiclivepreviewbitmap #x0326)
  (:gettitlebarinfoex #x033f)
  (:handheldfirst #x0358)
  (:handheldlast #x035f)
  (:afxfirst #x0360)
  (:afxlast #x037f)
  (:penwinfirst #x0380)
  (:penwinlast #x038f)
  (:app #x8000)
  (:user #x0400))

(cffi:defcenum show-command
  (:hide 0)
  (:shownormal 1)
  (:normal 1)
  (:showminimized 2)
  (:showmaximized 3)
  (:maximize 3)
  (:shownoactivate 4)
  (:show 5)
  (:minimize 6)
  (:showminnoactive 7)
  (:showna 8)
  (:restore 9)
  (:showdefault 10)
  (:forceminimize 11)
  (:max 11))

(cffi:defcenum device-cap
  (:driverversion 0)
  (:technology 2)
  (:horzsize 4)
  (:vertsize 6)
  (:horzres 8)
  (:vertres 10)
  (:bitspixel 12)
  (:planes 14)
  (:numbrushes 16)
  (:numpens 18)
  (:nummarkers 20)
  (:numfonts 22)
  (:numcolors 24)
  (:pdevicesize 26)
  (:curvecaps 28)
  (:linecaps 30)
  (:polygonalcaps 32)
  (:textcaps 34)
  (:clipcaps 36)
  (:rastercaps 38)
  (:aspectx 40)
  (:aspecty 42)
  (:aspectxy 44)
  (:logpixelsx 88)
  (:logpixelsy 90)
  (:sizepalette 104)
  (:numreserved 106)
  (:colorres 108)
  (:physicalwidth 110)
  (:physicalheight 111)
  (:physicaloffsetx 112)
  (:physicaloffsety 113)
  (:scalingfactorx 114)
  (:scalingfactory 115)
  (:vrefresh 116)
  (:desktopvertres 117)
  (:desktophorzres 118)
  (:bltalignment 119)
  (:shadeblendcaps 120)
  (:colormgmtcaps 121))

(cffi:defcenum system-metric
  (:cxscreen 0)
  (:cyscreen 1)
  (:cxvscroll 2)
  (:cyhscroll 3)
  (:cycaption 4)
  (:cxborder 5)
  (:cyborder 6)
  (:cxdlgframe 7)
  (:cydlgframe 8)
  (:cyvthumb 9)
  (:cxhthumb 10)
  (:cxicon 11)
  (:cyicon 12)
  (:cxcursor 13)
  (:cycursor 14)
  (:cymenu 15)
  (:cxfullscreen 16)
  (:cyfullscreen 17)
  (:cykanjiwindow 18)
  (:mousepresent 19)
  (:cyvscroll 20)
  (:cxhscroll 21)
  (:debug 22)
  (:swapbutton 23)
  (:reserved1 24)
  (:reserved2 25)
  (:reserved3 26)
  (:reserved4 27)
  (:cxmin 28)
  (:cymin 29)
  (:cxsize 30)
  (:cysize 31)
  (:cxframe 32)
  (:cyframe 33)
  (:cxmintrack 34)
  (:cymintrack 35)
  (:cxdoubleclk 36)
  (:cydoubleclk 37)
  (:cxiconspacing 38)
  (:cyiconspacing 39)
  (:menudropalignment 40)
  (:penwindows 41)
  (:dbcsenabled 42)
  (:cmousebuttons 43)
  (:secure 44)
  (:cxedge 45)
  (:cyedge 46)
  (:cxminspacing 47)
  (:cyminspacing 48)
  (:cxsmicon 49)
  (:cysmicon 50)
  (:cysmcaption 51)
  (:cxsmsize 52)
  (:cysmsize 53)
  (:cxmenusize 54)
  (:cymenusize 55)
  (:arrange 56)
  (:cxminimized 57)
  (:cyminimized 58)
  (:cxmaxtrack 59)
  (:cymaxtrack 60)
  (:cxmaximized 61)
  (:cymaximized 62)
  (:network 63)
  (:cleanboot 67)
  (:cxdrag 68)
  (:cydrag 69)
  (:showsounds 70)
  (:cxmenucheck 71)
  (:cymenucheck 72)
  (:slowmachine 73)
  (:mideastenabled 74)
  (:mousewheelpresent 75)
  (:xvirtualscreen 76)
  (:yvirtualscreen 77)
  (:cxvirtualscreen 78)
  (:cyvirtualscreen 79)
  (:cmonitors 80)
  (:samedisplayformat 81)
  (:immenabled 82)
  (:cxfocusborder 83)
  (:cyfocusborder 84)
  (:tabletpc 86)
  (:mediacenter 87)
  (:starter 88)
  (:serverr2 89)
  (:mousehorizontalwheelpresent 91)
  (:cxpaddedborder 92)
  (:digitizer 94)
  (:maximumtouches 95)
  (:cmetrics 97)
  (:remotesession #x1000)
  (:shuttingdown #x2000)
  (:remotecontrol #x2001)
  (:caretblinkingenabled #x2002)
  (:convertibleslatemode #x2003)
  (:systemdocked #x2004))

(cffi:defcenum (get-window-long :int :allow-undeclared-values t)
  (:wndproc -4)
  (:hinstance -6)
  (:hwndparent -8)
  (:id -12)
  (:style -16)
  (:exstyle -20)
  (:userdata -21))

(cffi:defcenum cursor
  (:arrow 32512)
  (:ibeam 32513)
  (:wait 32514)
  (:cross 32515)
  (:uparrow 32516)
  (:size 32640)
  (:icon 32641)
  (:sizenwse 32642)
  (:sizenesw 32643)
  (:sizewe 32644)
  (:sizens 32645)
  (:sizeall 32646)
  (:no 32648)
  (:hand 32649)
  (:appstarting 32650)
  (:help 32651)
  (:pin 32671)
  (:person 32672))

(cffi:defbitfield window-style
  (:overlapped #x00000000)
  (:popup #x80000000)
  (:child #x40000000)
  (:minimize #x20000000)
  (:visible #x10000000)
  (:disabled #x08000000)
  (:clipsiblings #x04000000)
  (:clipchildren #x02000000)
  (:maximize #x01000000)
  (:caption #x00c00000)
  (:border #x00800000)
  (:dlgframe #x00400000)
  (:vscroll #x00200000)
  (:hscroll #x00100000)
  (:sysmenu #x00080000)
  (:thickframe #x00040000)
  (:group #x00020000)
  (:tabstop #x00010000)
  (:minimizebox #x00020000)
  (:maximizebox #x00010000)
  ;; WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX
  (:overlappedwindow #x00CF0000)
  (:tiledwindow #x00CF0000)
  ;; WS_POPUP | WS_BORDER | WS_SYSMENU
  (:popupwindow #x80880000))

(cffi:defbitfield window-style-ex
  (:dlgmodalframe #x00000001)
  (:noparentnotify #x00000004)
  (:topmost #x00000008)
  (:acceptfiles #x00000010)
  (:transparent #x00000020)
  (:mdichild #x00000040)
  (:toolwindow #x00000080)
  (:windowedge #x00000100)
  (:clientedge #x00000200)
  (:contexthelp #x00000400)
  (:right #x00001000)
  (:left #x00000000)
  (:rtlreading #x00002000)
  (:ltrreading #x00000000)
  (:leftscrollbar #x00004000)
  (:rightscrollbar #x00000000)
  (:controlparent #x00010000)
  (:staticedge #x00020000)
  (:appwindow #x00040000)
  (:layered #x00080000)
  (:noinheritlayout #x00100000)
  (:noredirectionbitmap #x00200000)
  (:layoutrtl #x00400000)
  (:composited #x02000000)
  (:noactivate #x08000000))

(cffi:defbitfield window-class-style
  (:vredraw #x0001)
  (:hredraw #x0002)
  (:dblclks #x0008)
  (:owndc #x0020)
  (:classdc #x0040)
  (:parentdc #x0080)
  (:noclose #x0200)
  (:savebits #x0800)
  (:bytealignclient #x1000)
  (:bytealignwindow #x2000)
  (:globalclass #x4000)
  (:ime #x00010000)
  (:dropshadow #x00020000))

(cffi:defbitfield set-window-pos
  (:nosize #x0001)
  (:nomove #x0002)
  (:nozorder #x0004)
  (:noredraw #x0008)
  (:noactivate #x0010)
  (:framechanged #x0020)
  (:showwindow #x0040)
  (:hidewindow #x0080)
  (:nocopybits #x0100)
  (:noownerzorder #x0200)
  (:nosendchanging #x0400)
  (:defererase #x2000)
  (:asyncwindowpos #x4000))

(cffi:defcstruct (minmax-info :conc-name minmax-info-)
  (reserved-x :long)
  (reserved-y :long)
  (max-size-x :long)
  (max-size-y :long)
  (max-position-x :long)
  (max-position-y :long)
  (min-track-size-x :long)
  (min-track-size-y :long)
  (max-track-size-x :long)
  (max-track-size-y :long))

(cffi:defcstruct (window-class :conc-name window-class-)
  (style window-class-style)
  (proc :pointer)
  (class-extra :int)
  (window-extra :int)
  (instance :pointer)
  (icon :pointer)
  (cursor :pointer)
  (background :pointer)
  (menu-name com:wstring)
  (class-name com:wstring))

(cffi:defcstruct (message :conc-name message-)
  (window :pointer)
  (type message-type)
  (wparameter :ssize)
  (lparameter :ssize)
  (time :uint32)
  (x :long)
  (y :long))

(cffi:defcstruct (icon-info :conc-name icon-info-)
  (icon :boolean)
  (xhotspot :uint32)
  (yhotspot :uint32)
  (mask :pointer)
  (color :pointer))

(cffi:defcstruct (bitmap-info :conc-name bitmap-info-)
  (size :uint32)
  (width :long)
  (height :long)
  (planes :int16)
  (bit-count :int16)
  (compression :uint32)
  (size-image :uint32)
  (x-per-meter :long)
  (y-per-meter :long)
  (clear-used :uint32)
  (clear-important :uint32)
  (red-mask :uint32)
  (green-mask :uint32)
  (blue-mask :uint32)
  (alpha-mask :uint32))

(cffi:defcstruct (rect :conc-name rect-)
  (left :long)
  (top :long)
  (right :long)
  (bottom :long))

(cffi:defcstruct (track-mouse-event :conc-name track-mouse-event-)
  (size :uint32)
  (flags :uint32)
  (track :pointer)
  (hover-time :uint32))

(cffi:defcstruct (device-mode :conc-name device-mode-)
  (device-name :uint16 :count 32)
  (spec-version :uint16)
  (driver-version :uint16)
  (size :uint16)
  (driver-extra :uint16)
  (fields :uint32)
  (position-x :long)
  (position-y :long)
  (display-orientation :uint32)
  (display-fixed-output :uint32)
  (color :short)
  (duplex :short)
  (resolution :short)
  (option :short)
  (collate :short)
  (form-name :uint16 :count 32)
  (log-pixels :uint16)
  (bits-per-pel :uint32)
  (pels-width :uint32)
  (pels-height :uint32)
  (display-flags :uint32)
  (display-frequency :uint32)
  (icm-method :uint32)
  (icm-intent :uint32)
  (media-type :uint32)
  (dither-type :uint32)
  (reserved-1 :uint32)
  (reserved-2 :uint32)
  (panning-width :uint32)
  (panning-height :uint32))

(cffi:defbitfield (adapter-state-flags :uint32)
  (:device-active 1)
  (:device-primary-device 4)
  (:device-mirroring-driver 8)
  (:device-vga-compatible 16)
  (:device-removable 32)
  (:device-modes-pruned 134217728))

(cffi:defcstruct (adapter :conc-name adapter-)
  (cb :uint32)
  (device-name :uint16 :count 32)
  (device-string :uint16 :count 128)
  (state-flags adapter-state-flags)
  (device-id :uint16 :count 128)
  (device-key :uint16 :count 128))

(cffi:defcfun (adjust-window-rect "AdjustWindowRect") :boolean
  (rect :pointer)
  (style window-style)
  (menu :boolean))

(cffi:defcfun (bit-blt "BitBlt") :bool
  (hdc :pointer)
  (x :int)
  (y :int)
  (cx :int)
  (cy :int)
  (hdc-src :pointer)
  (x1 :int)
  (y1 :int)
  (rop :uint32))

(cffi:defcfun (bring-window-to-top "BringWindowToTop") :bool
  (window :pointer))

(cffi:defcfun (change-display-settings "ChangeDisplaySettingsExW") :long
  (device-name com:wstring)
  (dev-mode :pointer)
  (window :pointer)
  (flags display-setting-flags)
  (param :pointer))

(cffi:defcfun (create-window "CreateWindowExW") :pointer
  (ex-style window-style-ex)
  (class-name com:wstring)
  (window-name com:wstring)
  (style window-style)
  (x :int)
  (y :int)
  (w :int)
  (h :int)
  (parent :pointer)
  (menu :pointer)
  (instance :pointer)
  (param :pointer))

(cffi:defcfun (def-window-proc "DefWindowProcW") :size
  (window :pointer)
  (message message-type)
  (wparameter :size)
  (lparameter :size))

(cffi:defcfun (destroy-window "DestroyWindow") :boolean
  (window :pointer))

(cffi:defcfun (dispatch-message "DispatchMessageW") :size
  (message :pointer))

(cffi:defcfun (enable-non-client-dpi-scaling "EnableNonClientDpiScaling") :boolean
  (window :pointer))

(cffi:defcfun (enum-display-settings "EnumDisplaySettingsW") :boolean
  (device-name (:string :encoding :utf-16/le))
  (mode-num :uint32)
  (dev-mode :pointer))

(cffi:defcfun (enum-display-devices "EnumDisplayDevicesW") :boolean
  (device (:string :encoding :utf-16/le))
  (index :uint32)
  (output :pointer)
  (flags :uint32))

(cffi:defcfun (flash-window "FlashWindow") :boolean
  (window :pointer)
  (invert :boolean))

(cffi:defcfun (get-class "GetClassLongPtrW") :size
  (window :pointer)
  (index :int))

(cffi:defcfun (get-class-info "GetClassInfoW") :bool
  (hinstance :pointer)
  (class-name com:wstring)
  (class :pointer))

(cffi:defcfun (get-dc "GetDC") :pointer
  (window :pointer))

(cffi:defcfun (get-device-caps "GetDeviceCaps") :int
  (dc :pointer)
  (cap device-cap))

(cffi:defcfun (get-dpi-for-monitor "GetDpiForMonitor") com:hresult
  (monitor :pointer)
  (dpi-type monitor-dpi-type)
  (x :pointer)
  (y :pointer))

(cffi:defcfun (get-dpi-for-window "GetDpiForWindow") :uint
  (window :pointer))

(cffi:defcfun (get-message-time "GetMessageTime") :long)

(cffi:defcfun (get-module-handle "GetModuleHandleW") :pointer
  (arg :pointer))

(cffi:defcfun (get-key-state "GetKeyState") :short
  (key key))

(cffi:defcfun (get-system-metrics "GetSystemMetrics") :int
  (index system-metric))

(cffi:defcfun (get-window "GetWindowLongW") :ssize
  (window :pointer)
  (index get-window-long))

(cffi:defcfun (get-window-rect "GetWindowRect") :bool
  (window :pointer)
  (rect :pointer))

(cffi:defcfun (invalidate-rect "InvalidateRect") :boolean
  (window :pointer)
  (rect :pointer)
  (erase :boolean))

(cffi:defcfun (load-cursor "LoadCursorW") :pointer
  (window :pointer)
  (cursor-name cursor))

(cffi:defcfun (load-cursor* "LoadCursorW") :pointer
  (window :pointer)
  (cursor :pointer))

(cffi:defcfun (map-virtual-key "MapVirtualKeyW") :uint
  (code :uint)
  (map-type :uint))

(cffi:defcfun (monitor-from-window "MonitorFromWindow") :pointer
  (window :pointer)
  (flags :uint32))

(cffi:defcfun (move-window "MoveWindow") :bool
  (window :pointer)
  (x :int)
  (y :int)
  (w :int)
  (h :int)
  (repaint :boolean))

(cffi:defcfun (msg-wait-for-multiple-objects "MsgWaitForMultipleObjects") :uint32
  (count :uint32)
  (handles :pointer)
  (wait-all :bool)
  (milliseconds :uint32)
  (wake-mask :uint32))

(cffi:defcfun (peek-message "PeekMessageW") :boolean
  (message :pointer)
  (window :pointer)
  (message-filter-min :uint)
  (message-filter-max :uint)
  (remove-message :uint))

(cffi:defcfun (register-class "RegisterClassW") :uint16
  (class :pointer))

(cffi:defcfun (unregister-class "UnregisterClassW") :bool
  (name com:wstring)
  (window :pointer))

(cffi:defcfun (release-dc "ReleaseDC") :int
  (window :pointer)
  (dc :pointer))

(cffi:defcfun (send-message "SendMessageW") :ssize
  (window :pointer)
  (message message-type)
  (wparameter :size)
  (lparameter :size))

(cffi:defcfun (set-focus "SetFocus") :boolean
  (window :pointer))

(cffi:defcfun (set-foreground-window "SetForegroundWindow") :boolean
  (window :pointer))

(cffi:defcfun (set-process-dpi-aware "SetProcessDPIAware") :boolean)

(cffi:defcfun (set-process-dpi-awareness-context "SetProcessDpiAwarenessContext") :boolean
  (context dpi-awareness-context))

(cffi:defcfun (set-process-dpi-awareness "SetProcessDpiAwareness") com:hresult
  (awareness dpi-awareness))

(cffi:defcfun (set-window "SetWindowLongW") :ssize
  (window :pointer)
  (index get-window-long)
  (new-long :ssize))

(cffi:defcfun (set-window-pos "SetWindowPos") :boolean
  (window :pointer)
  (insert-after :ssize)
  (x :int)
  (y :int)
  (cx :int)
  (cy :int)
  (flags set-window-pos))

(cffi:defcfun (set-window-text "SetWindowText") :boolean
  (window :pointer)
  (title com:wstring))

(cffi:defcfun (show-window "ShowWindow") :boolean
  (window :pointer)
  (command show-command))

(cffi:defcfun (stretch-di-bits "StretchDIBits") :int
  (device :pointer)
  (xdest :int)
  (ydest :int)
  (wdest :int)
  (hdest :int)
  (xsrc :int)
  (ysrc :int)
  (wsrc :int)
  (hsrc :int)
  (bits :pointer)
  (bitmapinfo :pointer)
  (usage :uint)
  (rop :uint32))

(cffi:defcfun (to-unicode "ToUnicode") :int
  (vk :uint)
  (scan-code :uint)
  (state :pointer)
  (chars :pointer)
  (buff-count :int)
  (flags :uint))

(cffi:defcfun (track-mouse-event "TrackMouseEvent") :bool
  (event :pointer))

(cffi:defcfun (translate-message "TranslateMessage") :boolean
  (message :pointer))

(cffi:defcfun (validate-rect "ValidateRect") :boolean
  (window :pointer)
  (rect :pointer))

(cffi:defcfun (create-waitable-timer "CreateWaitableTimerW") :pointer
  (attributes :pointer)
  (manual-reset :boolean)
  (timer-name :pointer))

(cffi:defcfun (set-waitable-timer "SetWaitableTimer") :boolean
  (timer :pointer)
  (due-time :pointer)
  (period :long)
  (completion-routine :pointer)
  (arg :pointer)
  (resume :bool))

(cffi:defcfun (cancel-waitable-timer "CancelWaitableTimer") :boolean
  (timer :pointer))

(cffi:defcfun (close-handle "CloseHandle") :boolean
  (handle :pointer))

(cffi:defcfun (destroy-icon "DestroyIcon") :boolean
  (handle :pointer))

(cffi:defcfun (create-dib-section "CreateDIBSection") :pointer
  (dc :pointer)
  (bi :pointer)
  (usage :uint)
  (bits :pointer)
  (section :pointer)
  (offset :uint32))

(cffi:defcfun (create-bitmap "CreateBitmap") :pointer
  (width :int)
  (height :int)
  (planes :uint)
  (bitcount :uint)
  (bits :pointer))

(cffi:defcfun (create-icon "CreateIconIndirect") :pointer
  (icon-info :pointer))

(cffi:defcfun (destroy-object "DestroyObject") :boolean
  (object :pointer))

(cffi:defcfun (load-image "LoadImageW") :pointer
  (instance :pointer)
  (name cursor)
  (type load-image-type)
  (cx :int)
  (cy :int)
  (behavior load-image-behavior))

(cffi:defcfun (set-cursor "SetCursor") :boolean
  (cursor :pointer))

(cffi:defcfun (open-clipboard "OpenClipboard") :boolean
  (handle :pointer))

(cffi:defcfun (enum-clipboard-formats "EnumClipboardFormats") clipboard-format
  (format clipboard-format))

(cffi:defcfun (get-clipboard-data "GetClipboardData") :pointer
  (format clipboard-format))

(cffi:defcfun (close-clipboard "CloseClipboard") :boolean)

(cffi:defcfun (empty-clipboard "EmptyClipboard") :boolean)

(cffi:defcfun (set-clipboard-data "SetClipboardData") :boolean
  (format clipboard-format)
  (data :pointer))

(cffi:defcfun (global-alloc "GlobalAlloc") :pointer
  (flags global-alloc-flags)
  (size :size))

(cffi:defcfun (delete-object "DeleteObject") :boolean
  (handle :pointer))

(cffi:defcfun (global-lock "GlobalLock") :pointer
  (handle :pointer))

(cffi:defcfun (global-unlock "GlobalUnlock") :boolean
  (handle :pointer))

(cffi:defcfun (drag-query-point "DragQueryPoint") :boolean
  (handle :pointer)
  (point :pointer))

(cffi:defcfun (drag-query-file "DragQueryFileW") :uint
  (handle :pointer)
  (file :uint)
  (buf :pointer)
  (size :uint))

(cffi:defcfun (drag-finish "DragFinish") :boolean
  (handle :pointer))

(cffi:defcfun (drag-accept-files "DragAcceptFiles") :boolean
  (handle :pointer)
  (mode :boolean))
